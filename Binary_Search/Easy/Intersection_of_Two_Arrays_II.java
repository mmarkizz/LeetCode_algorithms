package Binary_Search.Easy;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class Intersection_of_Two_Arrays_II {
    public int[] intersect(int[] nums1, int[] nums2) {

        List<Integer> list = new ArrayList<>();
        HashMap<Integer, Integer> map = new HashMap<>();

         // Сохраняем количество каждого элемента в nums1
        for (int num : nums1) {
          map.put(num, map.getOrDefault(num, 0) + 1);
        }

        // Проверяем каждый элемент в nums2
        for (int num : nums2) {
            if (map.containsKey(num) && map.get(num) > 0) {
                list.add(num);
                map.put(num, map.get(num) - 1); // Уменьшаем счетчик
            }
        }

        // Преобразование списка в массив
        int[] result = new int[list.size()];
        for (int i = 0; i < list.size(); i++) {
            result[i] = list.get(i);
        }
    
        return result;
    }
}

/**nums1 = [1, 2, 2, 1]
nums2 = [2, 2]
Шаги выполнения программы:
Создание списка и карты:

Создаем пустой список list для хранения пересечения.
Создаем HashMap под названием map для хранения количества вхождений элементов из nums1.
Заполнение HashMap:

Проходим по каждому элементу в nums1 и добавляем его в map с количеством вхождений.
В процессе выполнения:
При обработке первого элемента 1: map станет {1=1}.
При обработке второго элемента 2: map станет {1=1, 2=1}.
При обработке третьего элемента 2: map станет {1=1, 2=2}.
При обработке четвертого элемента 1: map станет {1=2, 2=2}.
В результате, map теперь хранит количество вхождений: 1 встречается 2 раза, 2 — 2 раза.
Проверка элементов из nums2:

Проходим по каждому элементу в nums2 и проверяем, существует ли он в map и есть ли у него положительное количество:
При обработке первого элемента 2:
map содержит 2 и его количество больше 0, поэтому мы добавляем 2 в list и уменьшаем его количество в map на 1. Теперь list = [2], а map становится {1=2, 2=1}.
При обработке второго элемента 2:
map снова содержит 2 и его количество больше 0, поэтому мы добавляем еще один 2 в list и уменьшаем его количество в map на 1. Теперь list = [2, 2], а map становится {1=2, 2=0}.
Преобразование списка в массив:

Создаем новый массив result с размером, равным размеру list, который равен 2.
Копируем элементы из list в result: result[0] = 2, result[1] = 2.
Возврат результата:

Метод возвращает массив result, который равен [2, 2]. */